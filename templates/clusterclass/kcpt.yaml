apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlaneTemplate
metadata:
  name: "${CLUSTER_CLASS_NAME}-kcpt"
spec:
  template:
    spec:
      kubeadmConfigSpec:
        clusterConfiguration:
          apiServer:
            certSANs:
              - localhost
              - 127.0.0.1
              - 0.0.0.0
          controllerManager:
            extraArgs:
              enable-hostpath-provisioner: "true"
        files:
          - content: |
              apiVersion: v1
              kind: Pod
              metadata:
                name: kube-vip
                namespace: kube-system
              spec:
                containers:
                  - name: kube-vip
                    image: ghcr.io/kube-vip/kube-vip:v0.5.0
                    imagePullPolicy: IfNotPresent
                    args:
                      - manager
                    env:
                      - name: vip_arp
                        value: "true"
                      - name: address
                        value: "${CONTROL_PLANE_ENDPOINT_IP}"
                      - name: port
                        value: "${CONTROL_PLANE_ENDPOINT_PORT=6443}"
                      - name: vip_cidr
                        value: "32"
                      - name: cp_enable
                        value: "true"
                      - name: cp_namespace
                        value: kube-system
                      - name: vip_ddns
                        value: "false"
                      - name: vip_leaderelection
                        value: "true"
                      - name: vip_leaseduration
                        value: "15"
                      - name: vip_renewdeadline
                        value: "10"
                      - name: vip_retryperiod
                        value: "2"
                      - name: svc_enable
                        value: "${KUBEVIP_SVC_ENABLE=false}"
                      - name: lb_enable
                        value: "${KUBEVIP_LB_ENABLE=false}"
                    securityContext:
                      capabilities:
                        add:
                          - NET_ADMIN
                          - SYS_TIME
                          - NET_RAW
                    volumeMounts:
                      - mountPath: /etc/kubernetes/admin.conf
                        name: kubeconfig
                    resources: {}
                hostNetwork: true
                hostAliases:
                  - hostnames:
                      - kubernetes
                    ip: 127.0.0.1
                volumes:
                  - name: kubeconfig
                    hostPath:
                      type: FileOrCreate
                      path: /etc/kubernetes/admin.conf
              status: {}
            owner: root:root
            path: /etc/kubernetes/manifests/kube-vip.yaml
        initConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              # We have to pin the cgroupDriver to cgroupfs as kubeadm >=1.21 defaults to systemd
              # kind will implement systemd support in: https://github.com/kubernetes-sigs/kind/issues/1726
              #cgroup-driver: cgroupfs
              eviction-hard: nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<15%,memory.available<100Mi,imagefs.inodesFree<10%
              tls-cipher-suites: "${TLS_CIPHER_SUITES=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256}"
        users:
          - name: capiuser
            lockPassword: false
            sudo: ALL=(ALL) NOPASSWD:ALL
            sshAuthorizedKeys:
              - ${NUTANIX_SSH_AUTHORIZED_KEY}
        preKubeadmCommands:
          - echo "before kubeadm call" > /var/log/prekubeadm.log
        postKubeadmCommands:
          - echo export KUBECONFIG=/etc/kubernetes/admin.conf >> /root/.bashrc
          - echo "after kubeadm call" > /var/log/postkubeadm.log
        useExperimentalRetryJoin: true
        verbosity: 10